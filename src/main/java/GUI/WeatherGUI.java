/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import ApiData.AcuWeatherApi;
import javafx.embed.swing.JFXPanel;
import javafx.scene.Scene;
import javafx.scene.chart.CategoryAxis;
import javafx.scene.chart.LineChart;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.XYChart;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 *
 * @author pawfl
 */
public class WeatherGUI extends javax.swing.JFrame {

    String location;
    boolean saveToFile = false;
    String unit;
    List<List<Map<String,Object>>> downloaded_data;

    /**
     * Creates new form WeatherGUI
     */
    public WeatherGUI() {
        this.setTitle("WEATHER APP");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        LocationEntrance = new javax.swing.JTextField();
        SaveRadioButton = new javax.swing.JRadioButton();
        unitComboBox = new javax.swing.JComboBox<>();
        currentTab = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        currentWeatherLabel = new javax.swing.JLabel();
        tempLabel = new javax.swing.JLabel();
        weatherLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        hourly1 = new javax.swing.JLabel();
        hourly2 = new javax.swing.JLabel();
        hourly3 = new javax.swing.JLabel();
        hourly4 = new javax.swing.JLabel();
        hourly5 = new javax.swing.JLabel();
        hourly6 = new javax.swing.JLabel();
        hourly7 = new javax.swing.JLabel();
        hourly8 = new javax.swing.JLabel();
        hourly9 = new javax.swing.JLabel();
        hourly10 = new javax.swing.JLabel();
        hourly11 = new javax.swing.JLabel();
        hourly12 = new javax.swing.JLabel();
        hourlyTemp1 = new javax.swing.JLabel();
        hourlyTemp2 = new javax.swing.JLabel();
        hourlyTemp3 = new javax.swing.JLabel();
        hourlyTemp4 = new javax.swing.JLabel();
        hourlyTemp5 = new javax.swing.JLabel();
        hourlyTemp6 = new javax.swing.JLabel();
        hourlyWeather1 = new javax.swing.JLabel();
        hourlyWeather2 = new javax.swing.JLabel();
        hourlyWeather3 = new javax.swing.JLabel();
        hourlyWeather4 = new javax.swing.JLabel();
        hourlyWeather5 = new javax.swing.JLabel();
        hourlyWeather6 = new javax.swing.JLabel();
        hourlyWeather7 = new javax.swing.JLabel();
        hourlyTemp7 = new javax.swing.JLabel();
        hourlyTemp8 = new javax.swing.JLabel();
        hourlyWeather8 = new javax.swing.JLabel();
        hourlyWeather9 = new javax.swing.JLabel();
        hourlyTemp9 = new javax.swing.JLabel();
        hourlyTemp10 = new javax.swing.JLabel();
        hourlyWeather10 = new javax.swing.JLabel();
        hourlyWeather11 = new javax.swing.JLabel();
        hourlyTemp11 = new javax.swing.JLabel();
        hourlyTemp12 = new javax.swing.JLabel();
        hourlyWeather12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        dateLabel1 = new javax.swing.JLabel();
        dateLabel2 = new javax.swing.JLabel();
        dateLabel3 = new javax.swing.JLabel();
        dateLabel4 = new javax.swing.JLabel();
        dateLabel5 = new javax.swing.JLabel();
        dailyTemp1 = new javax.swing.JLabel();
        dailyTemp2 = new javax.swing.JLabel();
        dailyTemp3 = new javax.swing.JLabel();
        dailyTemp4 = new javax.swing.JLabel();
        dailyTemp5 = new javax.swing.JLabel();
        dailyWeather1 = new javax.swing.JLabel();
        dailyWeather2 = new javax.swing.JLabel();
        dailyWeather3 = new javax.swing.JLabel();
        dailyWeather4 = new javax.swing.JLabel();
        dailyWeather5 = new javax.swing.JLabel();
        panelHourly = new JFXPanel();
        SubmitButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        indeciesText = new javax.swing.JLabel();


        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LocationEntrance.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        LocationEntrance.setText("Enter Location");
        LocationEntrance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocationEntranceActionPerformed(evt);
            }
        });

        SaveRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        SaveRadioButton.setText("Save to file");
        SaveRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveRadioButtonActionPerformed(evt);
            }
        });

        unitComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        unitComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Metric", "Imperial" }));
        unitComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitComboBoxActionPerformed(evt);
            }
        });

        currentWeatherLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        currentWeatherLabel.setText("Current Weather");

        tempLabel.setFont(new java.awt.Font("Segoe UI", 0, 100)); // NOI18N

        weatherLabel.setFont(new java.awt.Font("Segoe UI", 0, 80)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(currentWeatherLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tempLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(weatherLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addGap(53, 53, 53))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(currentWeatherLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(weatherLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(jLabel2))
                    .addComponent(tempLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(97, Short.MAX_VALUE))
        );

        currentTab.addTab("Current", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(hourly5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourly4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourly3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourly2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourly6, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(hourly1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(hourlyTemp5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyTemp4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyTemp3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyTemp2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyTemp6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyTemp1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hourlyWeather3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyWeather2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyWeather6, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(hourlyWeather5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyWeather4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyWeather1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(hourly11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourly10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourly9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourly8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourly7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourly12, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(hourlyTemp11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyTemp10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyTemp9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyTemp8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyTemp12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyTemp7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hourlyWeather11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyWeather10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyWeather7, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(hourlyWeather8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyWeather9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hourlyWeather12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(68, 68, 68))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(hourlyWeather7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyWeather8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyWeather9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyWeather10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyWeather11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyWeather12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(hourlyTemp7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyTemp8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyTemp9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyTemp10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyTemp11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyTemp12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(hourlyWeather1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyWeather2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyWeather3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyWeather4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyWeather5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyWeather6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(hourlyTemp1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyTemp2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyTemp3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyTemp4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyTemp5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourlyTemp6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(hourly7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourly8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourly9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourly10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourly11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourly12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(hourly1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourly2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourly3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourly4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourly5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(hourly6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        currentTab.addTab("Hourly", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dailyTemp1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(dailyTemp2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dailyTemp3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dailyTemp4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dailyTemp5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(58, 58, 58)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dailyWeather1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dailyWeather2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dailyWeather3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dailyWeather4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dailyWeather5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(153, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(dailyWeather1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(dailyWeather2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(dailyWeather3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(dailyWeather4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(dailyWeather5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(dailyTemp1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(dailyTemp2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(dailyTemp3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(dailyTemp4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(dailyTemp5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(dateLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(dateLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(dateLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(dateLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(dateLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        currentTab.addTab("Daily", jPanel3);

        javax.swing.GroupLayout panelHourlyLayout = new javax.swing.GroupLayout(panelHourly);
        panelHourly.setLayout(panelHourlyLayout);
        panelHourlyLayout.setHorizontalGroup(
            panelHourlyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 734, Short.MAX_VALUE)
        );
        panelHourlyLayout.setVerticalGroup(
            panelHourlyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
        );

        currentTab.addTab("Last24h", panelHourly);

        jPanel4.setLayout(new FlowLayout(FlowLayout.LEFT)); // Ustawienia FlowLayout i wyrównanie do lewej strony

        JScrollPane scrollPane = new JScrollPane(indeciesText);
        scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jPanel4.add(scrollPane);

        currentTab.addTab("Indecies", jPanel4);

        currentTab.addTab("Indecies", jPanel4);


        SubmitButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(LocationEntrance, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(unitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SaveRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(currentTab, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LocationEntrance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unitComboBox)
                    .addComponent(SaveRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(currentTab)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        this.location = LocationEntrance.getText();
        this.unit = unitComboBox.getSelectedItem().toString();

        AcuWeatherApi acu = new AcuWeatherApi();
        this.downloaded_data = acu.Executor(location, unit.toLowerCase());

        Map<String,Object> currentData = this.downloaded_data.get(0).get(0);
        setCurrent(currentData);
        
        List<Map<String,Object>> hourlyData = this.downloaded_data.get(1);
        setHourly(hourlyData);
        
        List<Map<String,Object>> dailyData = this.downloaded_data.get(2);
        setDaily(dailyData);

        List<Map<String,Object>> last24Data = this.downloaded_data.get(3);
        setLast24(last24Data);

        List<Map<String,Object>> indeciesData = this.downloaded_data.get(4);
        setIndecies(indeciesData);
        
        
        if (SaveRadioButton.isSelected()) {
            acu.saveExecuted(downloaded_data);
        }
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void LocationEntranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocationEntranceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LocationEntranceActionPerformed

    private void unitComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitComboBoxActionPerformed

    private void SaveRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveRadioButtonActionPerformed
        saveToFile = !saveToFile;
    }//GEN-LAST:event_SaveRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WeatherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                WeatherGUI weatherGUI = new WeatherGUI();
                java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
                java.awt.Dimension frameSize = weatherGUI.getSize();
                weatherGUI.setLocation((screenSize.width - frameSize.width) / 2, (screenSize.height - frameSize.height) / 2);
                weatherGUI.setSize(screenSize);
                weatherGUI.setVisible(true);
            }
        });
    }
    
    private void setCurrent(Map<String,Object> currentData) {
        String currentTemp = ((Map)(((Map)(currentData.get("Temperature"))).get(unit))).get("Value").toString();
        currentTemp += "\u00B0" + ((Map)(((Map)(currentData.get("Temperature"))).get(unit))).get("Unit").toString();
        tempLabel.setText(currentTemp);
        
        String currWeather = currentData.get("WeatherText").toString();
        weatherLabel.setText(currWeather);
        double icon = (double) currentData.get("WeatherIcon");
        int iconInt = (int) icon;
        String iconString;
        if (iconInt < 10) iconString = "0" + Integer.toString(iconInt) + "-s.png";
        else iconString = Integer.toString(iconInt) + "-s.png";
        ImageIcon originalIcon = new ImageIcon("src/main/java/ApiData/grafiki pogody/" + iconString);
        Image originalImage = originalIcon.getImage();
        Image scaledImage = originalImage.getScaledInstance(125, 125, Image.SCALE_SMOOTH); // Zmiana rozmiaru na 50x50
        weatherLabel.setIcon(new ImageIcon(scaledImage));
    }
    private void setHourly(List<Map<String, Object>> hourlyData) {
        List<javax.swing.JLabel> hourLabs = new ArrayList<>();
        hourLabs.add(hourly1);
        hourLabs.add(hourly2);
        hourLabs.add(hourly3);
        hourLabs.add(hourly4);
        hourLabs.add(hourly5);
        hourLabs.add(hourly6);
        hourLabs.add(hourly7);
        hourLabs.add(hourly8);
        hourLabs.add(hourly9);
        hourLabs.add(hourly10);
        hourLabs.add(hourly11);
        hourLabs.add(hourly12);
        
        List<javax.swing.JLabel> hourTemps = new ArrayList<>();
        hourTemps.add(hourlyTemp1);
        hourTemps.add(hourlyTemp2);
        hourTemps.add(hourlyTemp3);
        hourTemps.add(hourlyTemp4);
        hourTemps.add(hourlyTemp5);
        hourTemps.add(hourlyTemp6);
        hourTemps.add(hourlyTemp7);
        hourTemps.add(hourlyTemp8);
        hourTemps.add(hourlyTemp9);
        hourTemps.add(hourlyTemp10);
        hourTemps.add(hourlyTemp11);
        hourTemps.add(hourlyTemp12);
        
        List<javax.swing.JLabel> hourWeather = new ArrayList<>();
        hourWeather.add(hourlyWeather1);
        hourWeather.add(hourlyWeather2);
        hourWeather.add(hourlyWeather3);
        hourWeather.add(hourlyWeather4);
        hourWeather.add(hourlyWeather5);
        hourWeather.add(hourlyWeather6);
        hourWeather.add(hourlyWeather7);
        hourWeather.add(hourlyWeather8);
        hourWeather.add(hourlyWeather9);
        hourWeather.add(hourlyWeather10);
        hourWeather.add(hourlyWeather11);
        hourWeather.add(hourlyWeather12);

        int i = 0;
        for (javax.swing.JLabel lab: hourLabs) {
            Object date = hourlyData.get(i).get("DateTime");
            OffsetDateTime offsetDateTime = OffsetDateTime.parse(date.toString());
            lab.setText(offsetDateTime.toLocalTime().toString());
            i++;
        }
        
        i = 0;
        for (javax.swing.JLabel lab: hourTemps) {
            String hourTemp = (((Map)(hourlyData.get(i).get("Temperature")))).get("Value").toString();
            hourTemp += "\u00B0" + (((Map)(hourlyData.get(i).get("Temperature")))).get("Unit").toString();
            lab.setText(hourTemp);
            i++;
        }
        
        i = 0;
        for (javax.swing.JLabel lab: hourWeather) {
            lab.setText(hourlyData.get(i).get("IconPhrase").toString());
            double icon = (double) hourlyData.get(i).get("WeatherIcon");
            int iconInt = (int) icon;
            String iconString;
            if (iconInt < 10) iconString = "0" + Integer.toString(iconInt) + "-s.png";
            else iconString = Integer.toString(iconInt) + "-s.png";
            lab.setIcon(new ImageIcon("src/main/java/ApiData/grafiki pogody/"+iconString));
            i++;
        }
    }
    private void setDaily(List<Map<String, Object>> dailyData) {
        List<javax.swing.JLabel> dataLabs = new ArrayList<>();
        dataLabs.add(dateLabel1);
        dataLabs.add(dateLabel2);
        dataLabs.add(dateLabel3);
        dataLabs.add(dateLabel4);
        dataLabs.add(dateLabel5);
        
        int i = 0;
        for (javax.swing.JLabel lab: dataLabs) {
            OffsetDateTime offsetDateTime = OffsetDateTime.parse(dailyData.get(i).get("Date").toString());
            LocalDate date = offsetDateTime.toLocalDate();
            lab.setText(date.toString());
            i++;
        }

        List<javax.swing.JLabel> dailyTemps = new ArrayList<>();
        dailyTemps.add(dailyTemp1);
        dailyTemps.add(dailyTemp2);
        dailyTemps.add(dailyTemp3);
        dailyTemps.add(dailyTemp4);
        dailyTemps.add(dailyTemp5);

        i = 0;
        for (javax.swing.JLabel lab: dailyTemps) {
            String minTemp = ((Map)(((Map)(dailyData.get(i).get("Temperature"))).get("Minimum"))).get("Value").toString();
            minTemp += "\u00B0" + ((Map)(((Map)(dailyData.get(i).get("Temperature"))).get("Minimum"))).get("Unit").toString();

            String maxTemp = ((Map)(((Map)(dailyData.get(i).get("Temperature"))).get("Maximum"))).get("Value").toString();
            maxTemp += "\u00B0" + ((Map)(((Map)(dailyData.get(i).get("Temperature"))).get("Maximum"))).get("Unit").toString();

            lab.setText(minTemp + "    -   " + maxTemp);

            i++;
        }

        List<javax.swing.JLabel> dailyWeathers = new ArrayList<>();
        dailyWeathers.add(dailyWeather1);
        dailyWeathers.add(dailyWeather2);
        dailyWeathers.add(dailyWeather3);
        dailyWeathers.add(dailyWeather4);
        dailyWeathers.add(dailyWeather5);

        i = 0;
        for (javax.swing.JLabel lab: dailyWeathers) {
            lab.setText(((Map)(dailyData.get(i).get("Day"))).get("IconPhrase").toString());
            double icon = (double) ((Map)(dailyData.get(i).get("Day"))).get("Icon");
            int iconInt = (int) icon;
            String iconString;
            if (iconInt < 10) iconString = "0" + Integer.toString(iconInt) + "-s.png";
            else iconString = Integer.toString(iconInt) + "-s.png";
            lab.setIcon(new ImageIcon("src/main/java/ApiData/grafiki pogody/"+iconString));
            i++;
        }
    }
    private void setLast24(List<Map<String, Object>> last24Data){
        CategoryAxis xAxis = new CategoryAxis();
        NumberAxis yAxis = new NumberAxis();
        xAxis.setLabel("Date");
        yAxis.setLabel("Temperature in °" + ((Map)(((Map)(last24Data.get(0).get("Temperature"))).get(unit))).get("Unit").toString());

        LineChart lineChart = new LineChart<>(xAxis, yAxis);
        lineChart.setTitle("Temperature");

        XYChart.Series series = new XYChart.Series();

        for (int i = 0; i < 24; i++) {
            String date = OffsetDateTime.parse(last24Data.get(i).get("LocalObservationDateTime").toString()).toLocalDateTime().toString();
            int temp = (int) Double.parseDouble(((Map)(((Map)(last24Data.get(i).get("Temperature"))).get(unit))).get("Value").toString());

            series.getData().add(new XYChart.Data(date, temp));
        }

        lineChart.getData().add(series);

        Scene scene = new Scene(lineChart);
        panelHourly.setScene(scene);

    }

    private void setIndecies(List<Map<String,Object>> indeciesData) {
        StringBuilder text = new StringBuilder("<html>");
        int n = indeciesData.size();
        for (int i = 0; i < n; i++) {
            text.append(indeciesData.get(i).get("Name").toString()).append(": ")
                    .append(indeciesData.get(i).get("Category").toString()).append("<br>");
        }
        text.append("</html>");

        indeciesText.setPreferredSize(new Dimension(700,700));
        indeciesText.setText(text.toString());

        indeciesText.setFont(new Font("Segoe UI", Font.PLAIN, 18));

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField LocationEntrance;
    private javax.swing.JRadioButton SaveRadioButton;
    private javax.swing.JButton SubmitButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTabbedPane currentTab;
    private javax.swing.JLabel currentWeatherLabel;
    private javax.swing.JLabel dailyTemp1;
    private javax.swing.JLabel dailyTemp2;
    private javax.swing.JLabel dailyTemp3;
    private javax.swing.JLabel dailyTemp4;
    private javax.swing.JLabel dailyTemp5;
    private javax.swing.JLabel dailyWeather1;
    private javax.swing.JLabel dailyWeather2;
    private javax.swing.JLabel dailyWeather3;
    private javax.swing.JLabel dailyWeather4;
    private javax.swing.JLabel dailyWeather5;
    private javax.swing.JLabel dateLabel1;
    private javax.swing.JLabel dateLabel2;
    private javax.swing.JLabel dateLabel3;
    private javax.swing.JLabel dateLabel4;
    private javax.swing.JLabel dateLabel5;
    private javax.swing.JLabel hourly1;
    private javax.swing.JLabel hourly10;
    private javax.swing.JLabel hourly11;
    private javax.swing.JLabel hourly12;
    private javax.swing.JLabel hourly2;
    private javax.swing.JLabel hourly3;
    private javax.swing.JLabel hourly4;
    private javax.swing.JLabel hourly5;
    private javax.swing.JLabel hourly6;
    private javax.swing.JLabel hourly7;
    private javax.swing.JLabel hourly8;
    private javax.swing.JLabel hourly9;
    private javax.swing.JLabel hourlyTemp1;
    private javax.swing.JLabel hourlyTemp10;
    private javax.swing.JLabel hourlyTemp11;
    private javax.swing.JLabel hourlyTemp12;
    private javax.swing.JLabel hourlyTemp2;
    private javax.swing.JLabel hourlyTemp3;
    private javax.swing.JLabel hourlyTemp4;
    private javax.swing.JLabel hourlyTemp5;
    private javax.swing.JLabel hourlyTemp6;
    private javax.swing.JLabel hourlyTemp7;
    private javax.swing.JLabel hourlyTemp8;
    private javax.swing.JLabel hourlyTemp9;
    private javax.swing.JLabel hourlyWeather1;
    private javax.swing.JLabel hourlyWeather10;
    private javax.swing.JLabel hourlyWeather11;
    private javax.swing.JLabel hourlyWeather12;
    private javax.swing.JLabel hourlyWeather2;
    private javax.swing.JLabel hourlyWeather3;
    private javax.swing.JLabel hourlyWeather4;
    private javax.swing.JLabel hourlyWeather5;
    private javax.swing.JLabel hourlyWeather6;
    private javax.swing.JLabel hourlyWeather7;
    private javax.swing.JLabel hourlyWeather8;
    private javax.swing.JLabel hourlyWeather9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private JFXPanel panelHourly;
    private javax.swing.JLabel tempLabel;
    private javax.swing.JComboBox<String> unitComboBox;
    private javax.swing.JLabel weatherLabel;
    private javax.swing.JLabel indeciesText;
    // End of variables declaration//GEN-END:variables
}
